元宇宙管理者后台

表字段设计

user
用户表
	id     访客唯一id    key
	name    姓名
	company    公司名称
	job    职务
	mail    邮箱
	phone   联系电话
	approval_date  添加日期
	approver_id   审批人id


	//visit_date  参观日期
CREATE TABLE user (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    company VARCHAR(255),
    job VARCHAR(255),
    mail VARCHAR(255),
    phone VARCHAR(20),
    approval_date DATE,
    approver_id INT
);


注意注册表和参观表是否分开！



邀请码表
    invitation_code	邀请码      key
	visit_startday  参观起始日
	visit_endday    参观结束日
	visit_starttime 参观起始小时（准点）
	approver_id	管理员id
	id     访客唯一id

CREATE TABLE expoverse.invitation_codes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    invitation_code_id VARCHAR(36),
    start_date DATE,
    end_date DATE,
    start_time TIME,
    userid INT,
    approver_id VARCHAR(20)
);



产品文件视频的url表
	file_id		文件id		key
	file_url     url地址
	file_type	文件类型    image/vedio
	product_id  产品 id         
	file_no	在产品中的序号	
    download 是否需要下载 TF


CREATE TABLE `expoverse`.`url` (
  `file_id` INT NOT NULL,
  `file_url` VARCHAR(60) NULL,
  `file_type` VARCHAR(20) NULL,
  `product_id` VARCHAR(25) NULL,
  `file_no` INT NULL,
  `download` TINYINT,
  PRIMARY KEY (`file_id`));


展区文件视频的url表
CREATE TABLE `expoverse`.`url_exhb` (
  `file_id` INT NOT NULL AUTO_INCREMENT,
  `file_url` VARCHAR(60) NULL,
  `file_type` VARCHAR(20) NULL,
  `exhibition_id` VARCHAR(45) NULL,
  `file_no` INT NULL,
  `download` TINYINT NULL,
  PRIMARY KEY (`file_id`));



产品和展区的从属表
	product_id  产品 id   string      key
	product_name  产品名称     string
	exhibition_id  属于的展区   string


CREATE TABLE `expoverse`.`product` (
  `product_id` VARCHAR(25) NOT NULL,
  `product_name` VARCHAR(50) NULL,
  `exhibition_id` VARCHAR(50) NULL,
  PRIMARY KEY (`product_id`));



每一个展区属于哪一块元宇宙
	exhibition_id  展区  id          key
	verse_id  属于哪一块元宇宙   expo
	exhibition_name  展区的名字
	describtion   产品描述



CREATE TABLE `expoverse`.`exhibition` (
  `exhibition_id` VARCHAR(20) NOT NULL,
  `verse_id` VARCHAR(20) NULL,
  `name` VARCHAR(45) NULL,
  `describtion` VARCHAR(45) NULL,
  PRIMARY KEY (`exhibition_id`));


访客参观展区记录
    loginid   哪一次的登录
	exhibition_id  参观的展区id
	userid   用户的id?     key
	trigger_timestamp  触发的时间   Long
	enter  进入还是离开  boolean
	product_id     参观的产品id
	// period_time   持续了多少分钟？


CREATE TABLE `expoverse`.`product_visit` (
  `loginid` INT NOT NULL,
  `userid` INT NULL,
  `prodid` VARCHAR(25) NULL,
  `duration` INT NULL,
  `trigger_timestamp` INT NULL,
  PRIMARY KEY (`loginid`));

访客参观产品记录
    loginid   哪一次的登录
	prodid  参观的产品id
	userid   用户的id?     key
	trigger_timestamp  触发的时间   Long
	duration   持续了多少秒


    访客参观流程,模型点一下进入观察模式,假如模型有DM,会进入DM的查看界面
    playfab倾向于收集能够重复更新的数据, playfab本身没有数据库接口,


https://deepinout.com/mysql/mysql-questions/1111_mysql_the_optimal_way_to_store_multipleselection_survey_answers_in_a_database.html
MySQL 数据库中存储多选项调查答案的最佳方法



expo专用问卷用户调查
	loginid	调查问卷id	key

			用户id
	submit_time	提交时间		
	period_time	完成时间
		第一题id
		第一题答案
		第二题id
		第二题答案
		第三题id




		
问卷题目
	ques_id 题目id  int    key
	ques_content 题目问题
	ques_type 题目类型

CREATE TABLE `expoverse`.`survey_questions` (
  `ques_id` INT NOT NULL AUTO_INCREMENT,
  `ques_content` VARCHAR(45) NOT NULL,
  `ques_type` VARCHAR(20) NOT NULL,
  `` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));




问卷选项
	ques_id   int
	option_id 选项id   int  key
	option_content 选项内容

CREATE TABLE `expoverse`.`survey_options` (
  `option_id` INT NOT NULL AUTO_INCREMENT,
  `ques_id` INT NOT NULL,
  `option_content` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`option_id`));




用户作答问卷的记录
    loginid   int  key
    userid    int
    duration_sec
    trigger_timestamp

CREATE TABLE `expoverse`.`survey_user` (
  `loginid` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NULL,
  `duration_sec` INT NULL,
  `trigger_timestamp` INT UNSIGNED NULL,
  PRIMARY KEY (`loginid`));




单选/多选, 针对单个问题打钩了哪一项
    id   key    Auto Increment
    loginid   int
    option_id   int

ALTER TABLE `expoverse`.`option_answers`
ADD COLUMN `id` INT NOT NULL AUTO_INCREMENT AFTER `option_id`,
CHANGE COLUMN `loginid` `loginid` INT NULL ,
DROP PRIMARY KEY,
ADD PRIMARY KEY (`id`);
;




expoverse.ques_fill
填空题,某一次问卷中针对某个问题的回答
    id
    ques_id     int
    loginid   int
    filltext    string


CREATE TABLE `expoverse`.`ques_fill` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ques_id` INT NULL,
  `loginid` INT NULL,
  `filltext` VARCHAR(90) NULL,
  PRIMARY KEY (`id`));



		
blob表
	图片container
		file_id	文件id	
		url 	url地址

	视频container
		file_id	文件id	
		url 	url地址







